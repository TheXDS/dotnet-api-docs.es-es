<Type Name="Math" FullName="System.Math">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="273f8d3befa1144371cfd08ffc11e7b12069ede0" />
    <Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/27/2018" />
    <Meta Name="ms.locfileid" Value="50179347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Math" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a1e3c-101">Proporciona constantes y métodos estáticos para operaciones trigonométricas, logarítmicas y otras funciones matemáticas comunes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a1e3c-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-102">En el ejemplo siguiente se usa varias funciones matemáticas y trigonométricas desde el <xref:System.Math> clase para calcular los ángulos internos de un trapezoide.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-103">Devuelve el valor absoluto de un número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-103">Returns the absolute value of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-104">Número mayor o igual que <see cref="F:System.Decimal.MinValue" />, pero menor o igual que <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-105">Devuelve el valor absoluto de un número <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-106">Número decimal, x, tal que 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-107">El valor absoluto de un <xref:System.Decimal> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-108">Por ejemplo, el valor absoluto de 1.2 y -1,2 es 1.2.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-109">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Decimal%29> método para obtener el valor absoluto de un número de <xref:System.Decimal> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-110">Número mayor o igual que <see cref="F:System.Double.MinValue" />, pero menor o igual que <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-111">Devuelve el valor absoluto de un número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-111">Returns the absolute value of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-112">Número de punto flotante de precisión doble, x, tal que 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-113">El valor absoluto de un <xref:System.Double> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-114">Por ejemplo, el valor absoluto de 1.2e03 y - 1.2e03 es 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="a1e3c-115">Si `value` es igual a <xref:System.Double.NegativeInfinity> o <xref:System.Double.PositiveInfinity>, el valor devuelto es <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="a1e3c-116">Si `value` es igual a <xref:System.Double.NaN>, el valor devuelto es <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-117">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Double%29> método para obtener el valor absoluto de un número de <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-118">Número mayor que <see cref="F:System.Int16.MinValue" />, pero menor o igual que <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-119">Devuelve el valor absoluto de un entero de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-119">Returns the absolute value of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-120">Número entero de 16 bits con signo, x, tal que 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-121">El valor absoluto de un <xref:System.Int16> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-122">Por ejemplo, el valor absoluto de -123 y 123 es 123.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-123">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Int16%29> método para obtener el valor absoluto de un número de <xref:System.Int16> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-124">
            <paramref name="value" /> es igual que <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-124">
              <paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-125">Número mayor que <see cref="F:System.Int32.MinValue" />, pero menor o igual que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-126">Devuelve el valor absoluto de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-126">Returns the absolute value of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-127">Número entero de 32 bits con signo, x, tal que 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-128">El valor absoluto de un <xref:System.Int32> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-129">Por ejemplo, el valor absoluto de -123 y 123 es 123.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-130">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Int32%29> método para obtener el valor absoluto de un número de <xref:System.Int32> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-131">
            <paramref name="value" /> es igual que <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-131">
              <paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-132">Número mayor que <see cref="F:System.Int64.MinValue" />, pero menor o igual que <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-133">Devuelve el valor absoluto de un entero de 64 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-133">Returns the absolute value of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-134">Número entero de 64 bits con signo, x, tal que 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-135">El valor absoluto de un <xref:System.Int64> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-136">Por ejemplo, el valor absoluto de -123 y 123 es 123.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-137">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Int64%29> método para obtener el valor absoluto de un número de <xref:System.Int64> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-138">
            <paramref name="value" /> es igual que <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-138">
              <paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-139">Número mayor que <see cref="F:System.SByte.MinValue" />, pero menor o igual que <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-140">Devuelve el valor absoluto de un entero de 8 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-140">Returns the absolute value of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-141">Número entero de 8 bits con signo, x, tal que 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-142">El valor absoluto de un byte con signo es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-143">Por ejemplo, el valor absoluto de 12 y -12 es 12.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-144">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.SByte%29> método para obtener el valor absoluto de un número de <xref:System.SByte> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-145">
            <paramref name="value" /> es igual que <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-145">
              <paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-146">Número mayor o igual que <see cref="F:System.Single.MinValue" />, pero menor o igual que <see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-147">Devuelve el valor absoluto de un número de punto flotante de precisión sencilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-147">Returns the absolute value of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-148">Número de punto flotante de precisión sencilla, x, tal que 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-149">El valor absoluto de un <xref:System.Single> es su valor numérico sin signo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="a1e3c-150">Por ejemplo, el valor absoluto de ambos 1.2e-03 y - 1.2e03 es 1.2e03.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="a1e3c-151">Si `value` es igual a <xref:System.Single.NegativeInfinity> o <xref:System.Single.PositiveInfinity>, el valor devuelto es <xref:System.Single.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="a1e3c-152">Si `value` es igual a <xref:System.Single.NaN>, el valor devuelto es <xref:System.Single.NaN>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-153">En el ejemplo siguiente se usa el <xref:System.Math.Abs%28System.Single%29> método para obtener el valor absoluto de un número de <xref:System.Single> valores.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-154">Número que representa un coseno, donde <c>d</c> debe ser mayor o igual que -1 y menor o igual que 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-154">A number representing a cosine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-155">Devuelve el ángulo cuyo coseno es el número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-155">Returns the angle whose cosine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-156">Ángulo, θ, medido en radianes, como 0 ≤θ≤π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span>
          </span>
          <span data-ttu-id="a1e3c-157">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-157">-or-</span>
          </span>
          <span data-ttu-id="a1e3c-158">
            <see cref="F:System.Double.NaN" /> si <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> es igual que <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-158">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-159">Multiplique el valor devuelto por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para convertir de radianes en grados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-160">En el ejemplo siguiente se usa el <xref:System.Math.Acos%2A> método para ayudar en el cálculo de los ángulos internos de un trapezoide determinado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-161">Número que representa un seno, donde <c>d</c> debe ser mayor o igual que -1 y menor o igual que 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-161">A number representing a sine, where <c>d</c> must be greater than or equal to -1, but less than or equal to 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-162">Devuelve el ángulo cuyo seno es el número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-162">Returns the angle whose sine is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-163">Ángulo, θ, medido en radianes, como -π/2 ≤θ≤π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-163">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span>
          </span>
          <span data-ttu-id="a1e3c-164">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-164">-or-</span>
          </span>
          <span data-ttu-id="a1e3c-165">
            <see cref="F:System.Double.NaN" /> si <paramref name="d" /> &lt; -1 o <paramref name="d" /> &gt; 1 o <paramref name="d" /> es igual que <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-165">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-166">Un valor devuelto positivo representa un ángulo ascendente desde el eje x; un valor devuelto negativo representa un ángulo de las agujas del reloj.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-166">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="a1e3c-167">Multiplique el valor devuelto por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para convertir de radianes en grados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-167">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-168">En el ejemplo siguiente se usa <xref:System.Math.Asin%2A> para ayudar en el cálculo de los ángulos internos de un trapezoide determinado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-168">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-169">Número que representa una tangente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-169">A number representing a tangent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-170">Devuelve el ángulo cuya tangente corresponde al número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-170">Returns the angle whose tangent is the specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-171">Ángulo, θ, medido en radianes, como -π/2 ≤θ≤π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-171">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span>
          </span>
          <span data-ttu-id="a1e3c-172">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-172">-or-</span>
          </span>
          <span data-ttu-id="a1e3c-173">
            <see cref="F:System.Double.NaN" /> si <paramref name="d" /> es igual a <see cref="F:System.Double.NaN" />, -π/2 redondeado a precisión doble (-1,5707963267949) si <paramref name="d" /> es igual a <see cref="F:System.Double.NegativeInfinity" />, o π/2 redondeado a precisión doble (1,5707963267949) si <paramref name="d" /> es igual a <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-173">
              <see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-174">Un valor devuelto positivo representa un ángulo ascendente desde el eje x; un valor devuelto negativo representa un ángulo de las agujas del reloj.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-174">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="a1e3c-175">Multiplique el valor devuelto por 180 /<xref:System.Math.PI?displayProperty=nameWithType> para convertir de radianes en grados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-175">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-176">El ejemplo siguiente muestra cómo calcular el arco tangente de un valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-176">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y">
          <span data-ttu-id="a1e3c-177">Coordenada Y de un punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-177">The y coordinate of a point.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="a1e3c-178">Coordenada X de un punto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-178">The x coordinate of a point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-179">Devuelve el ángulo cuya tangente es el cociente de dos números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-179">Returns the angle whose tangent is the quotient of two specified numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-180">Ángulo, θ, medido en radianes, como -π≤θ≤π, y tan(θ) = <paramref name="y" /> / <paramref name="x" />, donde (<paramref name="x" />, <paramref name="y" />) es un punto en el plano cartesiano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-180">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span>
          </span>
          <span data-ttu-id="a1e3c-181">Observe lo siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-181">Observe the following:</span>
          </span>
          <span data-ttu-id="a1e3c-182">-   Para (<paramref name="x" />, <paramref name="y" />) en el cuadrante 1, 0 &lt; θ &lt; π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-182">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span>
          </span>
          <span data-ttu-id="a1e3c-183">-   Para (<paramref name="x" />, <paramref name="y" />) en el cuadrante 2, π/2 &lt; θ≤π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-183">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span>
          </span>
          <span data-ttu-id="a1e3c-184">-   Para (<paramref name="x" />, <paramref name="y" />) en el cuadrante 3, -π &lt; θ &lt; -π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-184">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span>
          </span>
          <span data-ttu-id="a1e3c-185">-   Para (<paramref name="x" />, <paramref name="y" />) en el cuadrante 4, -π/2 &lt; θ &lt; 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-185">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span>
          </span>
          <span data-ttu-id="a1e3c-186">Para los puntos en los límites de los cuadrantes, el valor devuelto es el siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-186">For points on the boundaries of the quadrants, the return value is the following:</span>
          </span>
          <span data-ttu-id="a1e3c-187">-   Si y es 0 y x no es negativo, θ = 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-187">-   If y is 0 and x is not negative, θ = 0.</span>
          </span>
          <span data-ttu-id="a1e3c-188">-   Si y es 0 y x es negativo, θ = π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-188">-   If y is 0 and x is negative, θ = π.</span>
          </span>
          <span data-ttu-id="a1e3c-189">-   Si y es positivo y x es 0, θ = π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-189">-   If y is positive and x is 0, θ = π/2.</span>
          </span>
          <span data-ttu-id="a1e3c-190">-   Si y es negativo y el valor de x es 0, θ = -π/2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-190">-   If y is negative and x is 0, θ = -π/2.</span>
          </span>
          <span data-ttu-id="a1e3c-191">-   Si y es 0 y x es 0, θ = 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-191">-   If y is 0 and x is 0, θ = 0.</span>
          </span>
          <span data-ttu-id="a1e3c-192">Si <paramref name="x" /> o <paramref name="y" /> es <see cref="F:System.Double.NaN" /> o si <paramref name="x" /> y <paramref name="y" /> son <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NegativeInfinity" />, el método devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-192">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-193">El valor devuelto es el ángulo en el plano cartesiano formado por el eje x y un vector desde el origen (0,0) y termina en el punto, (x, y).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-193">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-194">El ejemplo siguiente muestra cómo calcular el arco tangente de un ángulo y un vector.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-194">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="a1e3c-195">El valor resultante se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-195">The resulting value is displayed in the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-196">El primer número que se va a multiplicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-196">The first number to multiply.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="a1e3c-197">El segundo número que se va a multiplicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-197">The second number to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-198">Calcula el producto completo de dos números de 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-198">Produces the full product of two 32-bit numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-199">Número que contiene el producto de los números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-199">The number containing the product of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-200">En el ejemplo siguiente se muestra el uso de la <xref:System.Math.BigMul%2A> método para calcular el producto de dos valores enteros.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-200">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  
  
 [!code-cpp[math.bigmul#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp#1)]
 [!code-csharp[math.bigmul#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs#1)]
 [!code-vb[math.bigmul#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-201">Devuelve el menor valor integral mayor o igual que el número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-201">Returns the smallest integral value greater than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-202">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-202">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-203">Este tipo de redondeo se denomina redondeo a infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-203">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-204">Número decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-204">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-205">Devuelve el valor integral más pequeño que es mayor o igual que el número decimal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-205">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-206">Valor entero más pequeño que es mayor o igual que <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-206">The smallest integral value that is greater than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-207">Tenga en cuenta que este método devuelve un valor <see cref="T:System.Decimal" /> en lugar de un tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-207">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-208">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-208">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-209">Este tipo de redondeo se denomina redondeo a infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-209">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="a1e3c-210">En otras palabras, si `d` es positivo, la presencia de las causas de cualquier componente de fracción `d` se redondea al entero más alto siguiente.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-210">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="a1e3c-211">Si `d` es negativo, la operación de redondeo hace que cualquier componente de fracción de `d` se descarten.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-211">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="a1e3c-212">La operación de este método difiere el <xref:System.Math.Floor%28System.Decimal%29> método, que es compatible con redondeo a infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-212">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-213">El ejemplo siguiente ilustra la <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> método y se contrasta con la <xref:System.Math.Floor%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-213">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-214">Número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-214">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-215">Devuelve el valor integral más pequeño que es mayor o igual que el número de punto flotante de precisión doble especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-215">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-216">Valor entero más pequeño que es mayor o igual que <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-216">The smallest integral value that is greater than or equal to <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="a1e3c-217">Si <paramref name="a" /> es igual que <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, se devuelve ese valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-217">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="a1e3c-218">Tenga en cuenta que este método devuelve un valor <see cref="T:System.Double" /> en lugar de un tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-218">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-219">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-219">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-220">Este tipo de redondeo se denomina redondeo a infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-220">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="a1e3c-221">En otras palabras, si `a` es positivo, la presencia de las causas de cualquier componente de fracción `a` se redondea al entero más alto siguiente.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-221">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="a1e3c-222">Si `a` es negativo, la operación de redondeo hace que cualquier componente de fracción de `a` se descarten.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-222">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="a1e3c-223">La operación de este método difiere el <xref:System.Math.Floor%28System.Double%29> método, que es compatible con redondeo a infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-223">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-224">El ejemplo siguiente ilustra la <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> método y se contrasta con la <xref:System.Math.Floor%28System.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-224">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
        <Parameter Name="min" Type="System.Byte" />
        <Parameter Name="max" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
        <Parameter Name="min" Type="System.Decimal" />
        <Parameter Name="max" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="min" Type="System.Double" />
        <Parameter Name="max" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
        <Parameter Name="min" Type="System.Int16" />
        <Parameter Name="max" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="min" Type="System.Int64" />
        <Parameter Name="max" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
        <Parameter Name="min" Type="System.SByte" />
        <Parameter Name="max" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
        <Parameter Name="min" Type="System.UInt16" />
        <Parameter Name="max" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="min" Type="System.UInt32" />
        <Parameter Name="max" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="min" Type="System.UInt64" />
        <Parameter Name="max" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="min">To be added.</param>
        <param name="max">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-225">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-225">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-226">Devuelve el coseno del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-226">Returns the cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-227">Coseno de <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-227">The cosine of <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-228">Si <paramref name="d" /> es igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, este método devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-228">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-229">El ángulo, `d`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-229">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="a1e3c-230">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-230">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="a1e3c-231">Los valores aceptables de `d` intervalo de aproximadamente -9223372036854775295 a aproximadamente 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-231">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="a1e3c-232">Para los valores fuera de este intervalo, el <xref:System.Math.Cos%2A> devuelve del método `d` sin modificar en lugar de producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-232">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-233">En el ejemplo siguiente se usa <xref:System.Math.Cos%2A> para evaluar determinadas identidades trigonométricas de ángulos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-233">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-234">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-234">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-235">Devuelve el coseno hiperbólico del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-235">Returns the hyperbolic cosine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-236">Coseno hiperbólico de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-236">The hyperbolic cosine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="a1e3c-237">Si <paramref name="value" /> es igual que <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, se devuelve <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-237">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span>
          </span>
          <span data-ttu-id="a1e3c-238">Si <paramref name="value" /> es igual que <see cref="F:System.Double.NaN" />, se devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-238">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-239">El ángulo, `value`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-239">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a1e3c-240">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-240">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-241">En el ejemplo siguiente se usa <xref:System.Math.Cosh%2A> para evaluar determinadas identidades hiperbólicas de los valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-241">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-242">Calcula el cociente de dos números y devuelve también el resto de la división como parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-242">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int *  -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
        <Parameter Name="result" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-243">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-243">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="a1e3c-244">Divisor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-244">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="a1e3c-245">Resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-245">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-246">Calcula el cociente de dos números enteros de 32 bits con signo y devuelve también el resto de la división como parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-246">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-247">Cociente de los números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-247">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-248">El valor de resto es igual que el resultado de la [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-248">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
   
## Examples  
 <span data-ttu-id="a1e3c-249">En el ejemplo siguiente se muestra el <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-249">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs#1)]
 [!code-vb[System.Math.DivRem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="a1e3c-250">
            <paramref name="b" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-250">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 *  -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-251">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-251">The dividend.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="a1e3c-252">Divisor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-252">The divisor.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="a1e3c-253">Resto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-253">The remainder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-254">Calcula el cociente de dos números enteros de 64 bits con signo y devuelve también el resto de la división como parámetro de salida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-254">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-255">Cociente de los números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-255">The quotient of the specified numbers.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-256">El valor de resto es igual que el resultado de la [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-256">The remainder value equals the result of the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-257">En el ejemplo siguiente se muestra el <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-257">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  
  
 [!code-csharp[System.Math.DivRem#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs#2)]
 [!code-vb[System.Math.DivRem#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="a1e3c-258">
            <paramref name="b" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-258">
              <paramref name="b" /> is zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.71828182845905;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.71828182845905)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.71828182845905" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.71828182845905;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.71828182845905</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-259">Representa la base logarítmica natural, especificada por la constante, <see langword="e" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-259">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-260">El valor de este campo es 2,7182818284590452354.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-260">The value of this field is 2.7182818284590452354.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-261">En el ejemplo siguiente se comparan <xref:System.Math.E> con el valor calculado a partir de una serie de energía.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-261">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  
  
 [!code-cpp[System.Math.E#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp#1)]
 [!code-csharp[System.Math.E#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs#1)]
 [!code-vb[System.Math.E#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-262">Número que especifica una potencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-262">A number specifying a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-263">Devuelve <see langword="e" /> elevado a la potencia especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-263">Returns <see langword="e" /> raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-264">Número <see langword="e" /> elevado a la potencia <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-264">The number <see langword="e" /> raised to the power <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-265">Si <paramref name="d" /> es igual que <see cref="F:System.Double.NaN" /> o <see cref="F:System.Double.PositiveInfinity" />, se devuelve ese valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-265">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
          <span data-ttu-id="a1e3c-266">Si <paramref name="d" /> es igual que <see cref="F:System.Double.NegativeInfinity" />, se devuelve 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-266">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-267">`e` es una constante matemática cuyo valor es de aproximadamente 2,71828.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-267">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="a1e3c-268">Use el <xref:System.Math.Pow%2A> método para calcular potencias de otras bases.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-268">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="a1e3c-269"><xref:System.Math.Exp%2A> es el inverso de <xref:System.Math.Log%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-269"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-270">En el ejemplo siguiente se usa <xref:System.Math.Exp%2A> para evaluar determinadas identidades exponenciales y logarítmicas de valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-270">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Exp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp#1)]
 [!code-csharp[System.Math.Exp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs#1)]
 [!code-vb[System.Math.Exp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-271">Devuelve el mayor valor integral menor o igual que el número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-271">Returns the largest integral value less than or equal to the specified number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-272">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-272">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-273">Este tipo de redondeo se denomina redondeo a infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-273">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-274">Número decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-274">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-275">Devuelve el mayor valor integral menor o igual que el número decimal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-275">Returns the largest integral value less than or equal to the specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-276">El mayor valor integral que es menor o igual que <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-276">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-277">Tenga en cuenta que el método devuelve un valor entero de tipo <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-277">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-278">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-278">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-279">Este tipo de redondeo se denomina redondeo a infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-279">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="a1e3c-280">En otras palabras, si `d` es positivo, se trunca cualquier componente de fracción.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-280">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="a1e3c-281">Si `d` es negativo, la presencia de cualquier componente fraccionario hace que se va a redondear al entero más pequeño.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-281">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="a1e3c-282">La operación de este método difiere el <xref:System.Math.Ceiling%2A> método, que es compatible con redondeo a infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-282">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-283">El ejemplo siguiente ilustra la <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> método y se contrasta con la <xref:System.Math.Ceiling%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-283">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-284">Número de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-284">A double-precision floating-point number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-285">Devuelve el mayor valor integral menor o igual que el número de punto flotante de precisión doble especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-285">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-286">El mayor valor integral que es menor o igual que <paramref name="d" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-286">The largest integral value less than or equal to <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-287">Si <paramref name="d" /> es igual que <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, se devuelve ese valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-287">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-288">El comportamiento de este método sigue el estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-288">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-289">Este tipo de redondeo se denomina redondeo a infinito negativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-289">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="a1e3c-290">En otras palabras, si `d` es positivo, se trunca cualquier componente de fracción.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-290">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="a1e3c-291">Si `d` es negativo, la presencia de cualquier componente fraccionario hace que se va a redondear al entero más pequeño.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-291">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="a1e3c-292">La operación de este método difiere el <xref:System.Math.Ceiling%2A> método, que es compatible con redondeo a infinito positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-292">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-293">El ejemplo siguiente ilustra la <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> método y se contrasta con la <xref:System.Math.Ceiling%28System.Double%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-293">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="a1e3c-294">Dividendo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-294">A dividend.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="a1e3c-295">Divisor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-295">A divisor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-296">Devuelve el resto de la división de dos números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-296">Returns the remainder resulting from the division of a specified number by another specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-297">Número igual a <paramref name="x" /> - (<paramref name="y" /> Q), donde Q es el cociente de <paramref name="x" /> / <paramref name="y" /> redondeado a su entero más próximo (si <paramref name="x" /> / <paramref name="y" /> se encuentra entre dos enteros, se devuelve el entero par).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-297">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span>
          </span>
          <span data-ttu-id="a1e3c-298">Si <paramref name="x" /> - (<paramref name="y" /> Q) es cero, se devuelve el valor +0 si <paramref name="x" /> es positivo o -0 si <paramref name="x" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-298">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span>
          </span>
          <span data-ttu-id="a1e3c-299">Si <paramref name="y" /> = 0, se devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-299">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-300">Esta operación cumple con la operación de resto definida en la sección 5.1 de ANSI/IEEE Std 754-1985; Estándar IEEE para aritmética binaria de punto flotante; Institute of Electrical and Electronics Engineers, Inc; 1985.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-300">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="a1e3c-301">El <xref:System.Math.IEEERemainder%2A> método no es igual que el [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-301">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span> <span data-ttu-id="a1e3c-302">Aunque ambos devuelven el resto después de la división, las fórmulas que usan son diferentes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-302">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="a1e3c-303">La fórmula para el <xref:System.Math.IEEERemainder%2A> método es:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-303">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="a1e3c-304">En cambio, la fórmula para el operador de resto es:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-304">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-305">El siguiente ejemplo contrasta el resto devuelto por la <xref:System.Math.IEEERemainder%2A> método con el resto devuelto por la [operador de resto](~/docs/csharp/language-reference/operators/remainder-operator.md).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-305">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](~/docs/csharp/language-reference/operators/remainder-operator.md).</span></span>  
  
 [!code-csharp[System.Math.IEEERemainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs#1)]
 [!code-vb[System.Math.IEEERemainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-306">Devuelve el logaritmo de un número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-306">Returns the logarithm of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-307">Número cuyo logaritmo se va a calcular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-307">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-308">Devuelve el logaritmo natural (en base <see langword="e" />) de un número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-308">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-309">Uno de los valores de la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-309">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-310">Parámetro <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-310">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-311">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-311">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-312">Positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-312">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-313">El algoritmo natural de <paramref name="d" />; es decir, ln <paramref name="d" /> o log e <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-313">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-314">Cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-314">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-315">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-315">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-316">Igual a <see cref="F:System.Double.NaN" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-316">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-317">Igual a <see cref="F:System.Double.PositiveInfinity" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-317">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-318">Parámetro `d` se especifica como un número en base 10.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-318">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-319">El ejemplo siguiente ilustra la <xref:System.Math.Log%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-319">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  
  
 [!code-csharp[System.Math.Log_Overloads#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs#2)]
 [!code-vb[System.Math.Log_Overloads#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-320">Número cuyo logaritmo se va a calcular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-320">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <param name="newBase">
          <span data-ttu-id="a1e3c-321">Base del logaritmo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-321">The base of the logarithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-322">Devuelve el logaritmo de un número especificado en una base determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-322">Returns the logarithm of a specified number in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-323">Uno de los valores de la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-323">One of the values in the following table.</span>
          </span>
          <span data-ttu-id="a1e3c-324">(+Infinito denota <see cref="F:System.Double.PositiveInfinity" />, -Infinito denota <see cref="F:System.Double.NegativeInfinity" /> y NaN denota <see cref="F:System.Double.NaN" />)</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-324">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="a" />
              </term>
              <description>
                <paramref name="newBase" />
              </description>
              <description>
                <span data-ttu-id="a1e3c-325">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-325">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-326">
                  <paramref name="a" />&gt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-326">
                    <paramref name="a" />&gt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-327">(0 &lt;<paramref name="newBase" />&lt; 1) o (<paramref name="newBase" />&gt; 1)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-327">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-328">lognewBase(a)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-328">lognewBase(a)</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-329">
                  <paramref name="a" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-329">
                    <paramref name="a" />&lt; 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-330">(cualquier valor)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-330">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-331">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-331">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-332">(cualquier valor)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-332">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-333">
                  <paramref name="newBase" />&lt; 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-333">
                    <paramref name="newBase" />&lt; 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-334">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-334">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-335">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-335">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-336">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-336">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-337">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-337">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-338">
                  <paramref name="a" /> != 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-338">
                    <paramref name="a" /> != 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-339">
                  <paramref name="newBase" /> = +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-339">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-340">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-340">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-341">
                  <paramref name="a" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-341">
                    <paramref name="a" /> = NaN</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-342">(cualquier valor)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-342">(any value)</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-343">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-343">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-344">(cualquier valor)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-344">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-345">
                  <paramref name="newBase" /> = NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-345">
                    <paramref name="newBase" /> = NaN</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-346">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-346">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-347">(cualquier valor)</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-347">(any value)</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-348">
                  <paramref name="newBase" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-348">
                    <paramref name="newBase" /> = 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-349">NaN</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-349">NaN</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-350">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-350">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-351">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-352">+Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-352">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-353">
                  <paramref name="a" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-353">
                    <paramref name="a" /> = 0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-354">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-354">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-355">-Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-355">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-356">
                  <paramref name="a" /> =  +infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-356">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-357">0 &lt;<paramref name="newBase" />&lt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-358">-Infinity</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-358">-Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-359">
                  <paramref name="a" /> =  +infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-359">
                    <paramref name="a" /> =  +Infinity</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-360">
                  <paramref name="newBase" />&gt; 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-360">
                    <paramref name="newBase" />&gt; 1</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-361">+Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-361">+Infinity</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-362">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-362">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-363">
                  <paramref name="newBase" /> = 0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-363">
                    <paramref name="newBase" /> = 0</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-364">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-364">0</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-365">
                  <paramref name="a" /> = 1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-365">
                    <paramref name="a" /> = 1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-366">
                  <paramref name="newBase" /> = +Infinito</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-366">
                    <paramref name="newBase" /> = +Infinity</span>
                </span>
              </description>
              <description>
                <span data-ttu-id="a1e3c-367">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-367">0</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-368">En el ejemplo siguiente se usa <xref:System.Math.Log%2A> para evaluar determinadas identidades logarítmicas de valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-368">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Log_Overloads#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp#1)]
 [!code-csharp[System.Math.Log_Overloads#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs#1)]
 [!code-vb[System.Math.Log_Overloads#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-369">Número cuyo logaritmo hay que calcular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-369">A number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-370">Devuelve el logaritmo en base 10 de un número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-370">Returns the base 10 logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-371">Uno de los valores de la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-371">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-372">Parámetro <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-372">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-373">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-373">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-374">Positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-374">Positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-375">Logaritmo en base 10 de <paramref name="d" />; es decir, log 10<paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-375">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-376">Cero</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-376">Zero</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-377">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-377">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-378">Igual a <see cref="F:System.Double.NaN" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-378">Equal to <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-379">Igual a <see cref="F:System.Double.PositiveInfinity" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-379">Equal to <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-380">Parámetro `d` se especifica como un número en base 10.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-380">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-381">En el ejemplo siguiente se usa el <xref:System.Math.Log10%2A> método para devolver el logaritmo en base 10 de los valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-381">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  
  
 [!code-csharp[System.Math.Log10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs#1)]
 [!code-vb[System.Math.Log10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-382">Devuelve el mayor de dos números especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-382">Returns the larger of two specified numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-383">Primer entero de 8 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-383">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-384">Segundo entero de 8 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-384">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-385">Devuelve el mayor de dos enteros de 8 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-385">Returns the larger of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-386">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-386">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-387">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-387">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-388">Primer número de dos números decimales que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-388">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-389">Segundo número de dos decimales que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-389">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-390">Devuelve el mayor de dos números decimales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-390">Returns the larger of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-391">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-391">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-392">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-392">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-393">Primer número de punto flotante de precisión doble de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-393">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-394">Segundo número de punto flotante de precisión doble de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-394">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-395">Devuelve el mayor de dos números de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-395">Returns the larger of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-396">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-396">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="a1e3c-397">Si <paramref name="val1" />, <paramref name="val2" /> o ambos ( <paramref name="val1" /> y <paramref name="val2" />) son iguales que <see cref="F:System.Double.NaN" />, se devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-397">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-398">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-398">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-399">Primero de los dos enteros de 16 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-399">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-400">Segundo de los dos enteros de 16 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-400">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-401">Devuelve el mayor de dos enteros de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-401">Returns the larger of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-402">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-402">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-403">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-403">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-404">Primero de los dos enteros de 32 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-404">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-405">Segundo de los dos enteros de 32 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-405">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-406">Devuelve el mayor de dos enteros de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-406">Returns the larger of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-407">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-407">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-408">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-408">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-409">Primero de los dos enteros de 64 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-409">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-410">Segundo de los dos enteros de 64 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-410">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-411">Devuelve el mayor de dos enteros de 64 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-411">Returns the larger of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-412">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-412">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-413">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-413">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-414">Primero de los dos enteros de 8 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-414">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-415">Segundo de los dos enteros de 8 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-415">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-416">Devuelve el mayor de dos enteros de 8 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-416">Returns the larger of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-417">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-417">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-418">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-418">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-419">Primer número de punto flotante de precisión sencilla de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-419">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-420">Segundo número de punto flotante de precisión sencilla de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-420">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-421">Devuelve el mayor de dos números de punto flotante de precisión sencilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-421">Returns the larger of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-422">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-422">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
          <span data-ttu-id="a1e3c-423">Si <paramref name="val1" /> o <paramref name="val2" />, o ambos (<paramref name="val1" /> y <paramref name="val2" />) son iguales a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> se devuelve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-423">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-424">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-424">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-425">Primer entero de 16 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-425">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-426">Segundo entero de 16 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-426">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-427">Devuelve el mayor de dos enteros de 16 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-427">Returns the larger of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-428">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-428">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-429">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-429">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-430">Primer entero de 32 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-430">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-431">Segundo entero de 32 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-431">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-432">Devuelve el mayor de dos enteros de 32 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-432">Returns the larger of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-433">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-433">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-434">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-434">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-435">Primer entero de 64 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-435">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-436">Segundo entero de 64 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-436">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-437">Devuelve el mayor de dos enteros de 64 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-437">Returns the larger of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-438">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea mayor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-438">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-439">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Max%2A> método para devolver y mostrar la mayor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-439">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables.</span></span>  
  
 [!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
 [!code-csharp[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
 [!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-440">Devuelve el menor de dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-440">Returns the smaller of two numbers.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-441">Primer entero de 8 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-441">The first of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-442">Segundo entero de 8 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-442">The second of two 8-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-443">Devuelve el menor de dos enteros de 8 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-443">Returns the smaller of two 8-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-444">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-444">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-445">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-445">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-446">Primer número de dos números decimales que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-446">The first of two decimal numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-447">Segundo número de dos decimales que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-447">The second of two decimal numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-448">Devuelve el menor de dos números decimales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-448">Returns the smaller of two decimal numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-449">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-449">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-450">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-450">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-451">Primer número de punto flotante de precisión doble de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-451">The first of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-452">Segundo número de punto flotante de precisión doble de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-452">The second of two double-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-453">Devuelve el menor de dos números de punto flotante de precisión doble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-453">Returns the smaller of two double-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-454">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-454">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="a1e3c-455">Si <paramref name="val1" />, <paramref name="val2" /> o ambos ( <paramref name="val1" /> y <paramref name="val2" />) son iguales que <see cref="F:System.Double.NaN" />, se devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-455">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-456">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-456">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-457">Primero de los dos enteros de 16 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-457">The first of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-458">Segundo de los dos enteros de 16 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-458">The second of two 16-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-459">Devuelve el menor de dos enteros de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-459">Returns the smaller of two 16-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-460">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-460">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-461">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-461">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-462">Primero de los dos enteros de 32 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-462">The first of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-463">Segundo de los dos enteros de 32 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-463">The second of two 32-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-464">Devuelve el menor de dos enteros de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-464">Returns the smaller of two 32-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-465">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-465">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-466">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-466">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-467">Primero de los dos enteros de 64 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-467">The first of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-468">Segundo de los dos enteros de 64 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-468">The second of two 64-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-469">Devuelve el menor de dos enteros de 64 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-469">Returns the smaller of two 64-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-470">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-470">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-471">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-471">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-472">Primero de los dos enteros de 8 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-472">The first of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-473">Segundo de los dos enteros de 8 bits con signo que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-473">The second of two 8-bit signed integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-474">Devuelve el menor de dos enteros de 8 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-474">Returns the smaller of two 8-bit signed integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-475">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-475">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-476">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-476">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-477">Primer número de punto flotante de precisión sencilla de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-477">The first of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-478">Segundo número de punto flotante de precisión sencilla de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-478">The second of two single-precision floating-point numbers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-479">Devuelve el menor de dos números de punto flotante de precisión sencilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-479">Returns the smaller of two single-precision floating-point numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-480">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-480">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
          <span data-ttu-id="a1e3c-481">Si <paramref name="val1" />, <paramref name="val2" /> o ambos ( <paramref name="val1" /> y <paramref name="val2" />) son iguales que <see cref="F:System.Single.NaN" />, se devuelve <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-481">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-482">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-482">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-483">Primer entero de 16 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-483">The first of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-484">Segundo entero de 16 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-484">The second of two 16-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-485">Devuelve el menor de dos enteros de 16 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-485">Returns the smaller of two 16-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-486">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-486">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-487">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-487">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-488">Primer entero de 32 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-488">The first of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-489">Segundo entero de 32 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-489">The second of two 32-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-490">Devuelve el menor de dos enteros de 32 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-490">Returns the smaller of two 32-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-491">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-491">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-492">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-492">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1">
          <span data-ttu-id="a1e3c-493">Primer entero de 64 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-493">The first of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <param name="val2">
          <span data-ttu-id="a1e3c-494">Segundo entero de 64 bits sin signo de los dos que se van a comparar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-494">The second of two 64-bit unsigned integers to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-495">Devuelve el menor de dos enteros de 64 bits sin signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-495">Returns the smaller of two 64-bit unsigned integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-496">Parámetro <paramref name="val1" /> o <paramref name="val2" />, el que sea menor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-496">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-497">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Min%2A> método para devolver y mostrar el menor de dos variables.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-497">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables.</span></span>  
  
 [!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
 [!code-csharp[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
 [!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.14159265358979;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.14159265358979)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.14159265358979" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.14159265358979;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.14159265358979</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-498">Representa la proporción de la circunferencia de un círculo en relación con su diámetro, especificado por la constante π.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-498">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-499">El valor de este campo es 3,14159265358979323846.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-499">The value of this field is 3.14159265358979323846.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-500">En el ejemplo siguiente se usa <xref:System.Math.PI> para ayudar en el cálculo de los ángulos internos de un trapezoide determinado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-500">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  
  
 [!code-cpp[MathSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp#1)]
 [!code-csharp[MathSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs#1)]
 [!code-vb[MathSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="a1e3c-501">Número de punto flotante de precisión doble que se desea elevar a una potencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-501">A double-precision floating-point number to be raised to a power.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="a1e3c-502">Número de punto flotante de precisión doble que especifica una potencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-502">A double-precision floating-point number that specifies a power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-503">Devuelve un número especificado elevado a la potencia especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-503">Returns a specified number raised to the specified power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-504">Número <paramref name="x" /> elevado a la potencia <paramref name="y" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-504">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-505">En la tabla siguiente indica el valor devuelto cuando se especifican varios valores o intervalos de valores para el `x` y `y` parámetros.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-505">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="a1e3c-506">Para obtener más información, vea <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> y <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-506">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="a1e3c-507">Parámetros</span><span class="sxs-lookup"><span data-stu-id="a1e3c-507">Parameters</span></span>|<span data-ttu-id="a1e3c-508">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="a1e3c-508">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="a1e3c-509">`x` o `y`  =  `NaN`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-509">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="a1e3c-510">`x` = Cualquier valor excepto `NaN`; `y` = 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-510">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="a1e3c-511">1</span><span class="sxs-lookup"><span data-stu-id="a1e3c-511">1</span></span>|  
|<span data-ttu-id="a1e3c-512">`x` = `NegativeInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-512">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="a1e3c-513">0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-513">0</span></span>|  
|<span data-ttu-id="a1e3c-514">`x` = `NegativeInfinity`; `y` es un entero impar positivo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-514">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="a1e3c-515">`x` = `NegativeInfinity`; `y` es positivo, pero no es un entero impar.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-515">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a1e3c-516">`x` < 0, pero no `NegativeInfinity`; `y` no es un entero, `NegativeInfinity`, o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-516">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="a1e3c-517">`x` = -1; `y`  =  `NegativeInfinity` o `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-517">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="a1e3c-518">-1 < `x` < 1; `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-518">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a1e3c-519">-1 < `x` < 1; `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-519">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="a1e3c-520">0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-520">0</span></span>|  
|<span data-ttu-id="a1e3c-521">`x` < -1 o `x` > 1. `y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-521">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="a1e3c-522">0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-522">0</span></span>|  
|<span data-ttu-id="a1e3c-523">`x` < -1 o `x` > 1. `y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-523">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a1e3c-524">`x` = 0; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-524">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="a1e3c-525">`x` = 0; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-525">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="a1e3c-526">0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-526">0</span></span>|  
|<span data-ttu-id="a1e3c-527">`x` = 1; `y` es cualquier valor excepto `NaN`.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-527">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="a1e3c-528">1</span><span class="sxs-lookup"><span data-stu-id="a1e3c-528">1</span></span>|  
|<span data-ttu-id="a1e3c-529">`x` = `PositiveInfinity`; `y` < 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-529">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="a1e3c-530">0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-530">0</span></span>|  
|<span data-ttu-id="a1e3c-531">`x` = `PositiveInfinity`; `y` > 0.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-531">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-532">En el ejemplo siguiente se usa el <xref:System.Math.Pow%2A> método para calcular el valor que es el resultado de elevar a 2 a una potencia comprendida entre 0 y 32.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-532">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-533">Redondea un valor al entero más próximo o al número especificado de dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-533">Rounds a value to the nearest integer or to the specified number of fractional digits.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-534">En esta sección:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-534">In this section:</span></span>  
  
 <span data-ttu-id="a1e3c-535">[Sintaxis de método sobrecargado](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-535">[Overloaded method syntax](#Syntax) </span></span>  
 <span data-ttu-id="a1e3c-536">[Parámetros](#Params) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-536">[Parameters](#Params) </span></span>  
 <span data-ttu-id="a1e3c-537">[Valor devuelto](#Returns) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-537">[Return value](#Returns) </span></span>  
 <span data-ttu-id="a1e3c-538">[Excepciones](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-538">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="a1e3c-539">[¿Qué método se debe llamar?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-539">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="a1e3c-540">[Los valores de punto medio y convenciones de redondeo](#Midpoint) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-540">[Midpoint values and rounding conventions](#Midpoint) </span></span>  
 <span data-ttu-id="a1e3c-541">[Redondeo y la precisión](#Precision) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-541">[Rounding and precision](#Precision) </span></span>  
 <span data-ttu-id="a1e3c-542">[Valores de punto flotante de precisión sencilla y redondeo](#Single) </span><span class="sxs-lookup"><span data-stu-id="a1e3c-542">[Rounding and single-precision floating-point values](#Single) </span></span>  
 <span data-ttu-id="a1e3c-543">Ejemplos:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-543">Examples:</span></span>   
 [<span data-ttu-id="a1e3c-544">Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-544">Math.Round(Decimal)</span></span>](#Round1_Example)  
 [<span data-ttu-id="a1e3c-545">Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-545">Math.Round(Double)</span></span>](#Round2_Example)  
 [<span data-ttu-id="a1e3c-546">Math.Round (Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-546">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
 [<span data-ttu-id="a1e3c-547">Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-547">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
 [<span data-ttu-id="a1e3c-548">Math.Round (doble, Int32)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-548">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
 [<span data-ttu-id="a1e3c-549">Math.Round (doble, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-549">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
 [<span data-ttu-id="a1e3c-550">Math.Round (Decimal, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-550">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
 [<span data-ttu-id="a1e3c-551">Math.Round (doble, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-551">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  
[<span data-ttu-id="a1e3c-552">Información de versión</span><span class="sxs-lookup"><span data-stu-id="a1e3c-552">Version information</span></span>](#Round_Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-method-syntax"></a><span data-ttu-id="a1e3c-553">Sintaxis de método sobrecargado</span><span class="sxs-lookup"><span data-stu-id="a1e3c-553">Overloaded method syntax</span></span>  
 <span data-ttu-id="a1e3c-554">¿Para obtener orientación adicional acerca de cómo elegir una sobrecarga, vea [qué método se debe llamar?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-554">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 <span data-ttu-id="a1e3c-555">`Decimal Math.Round(Decimal` `d` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-555">`Decimal Math.Round(Decimal` `d` `)`</span></span>  
 <span data-ttu-id="a1e3c-556">Redondea un valor decimal al entero más cercano y redondea los valores de punto medio al número par más cercano ([ejemplo](#Round1_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-556">Rounds a decimal value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round1_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-557">`Double Math.Round(Double` `a` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-557">`Double Math.Round(Double` `a` `)`</span></span>  
 <span data-ttu-id="a1e3c-558">Redondea un valor de punto flotante de precisión doble al entero más cercano y redondea los valores de punto medio al número par más cercano ([ejemplo](#Round2_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-558">Rounds a double-precision floating-point value to the nearest integer, and rounds midpoint values to the nearest even number ([example](#Round2_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-559">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `)`</span></span>  
 <span data-ttu-id="a1e3c-560">Redondea un valor decimal a un número especificado de dígitos fraccionarios y redondea los valores de punto medio al número par más cercano ([ejemplo](#Round3_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-560">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round3_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-561">`Double Math.Round(Double` `value` `, Int32`  `digits` `)`</span></span>  
 <span data-ttu-id="a1e3c-562">Redondea un valor de punto flotante de precisión doble en un número especificado de dígitos fraccionarios y redondea los valores de punto medio al número par más cercano ([ejemplo](#Round4_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-562">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number ([example](#Round4_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-563">`Decimal Math.Round(Decimal` `d` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a1e3c-564">Redondea un valor decimal al entero más próximo y utiliza la convención de redondeo especificada para los valores de punto medio ([ejemplo](#Round5_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-564">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round5_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-565">`Double Math.Round(Double` `value` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a1e3c-566">Redondea un valor de punto flotante de precisión doble al entero más próximo y utiliza la convención de redondeo especificada para los valores de punto medio ([ejemplo](#Round6_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-566">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values ([example](#Round6_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-567">`Decimal Math.Round(Decimal` `d` `, Int32`  `decimals` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a1e3c-568">Redondea un valor decimal a un número especificado de dígitos fraccionarios y utiliza la convención de redondeo especificada para los valores de punto medio ([ejemplo](#Round7_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-568">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round7_Example)).</span></span>  
  
 <span data-ttu-id="a1e3c-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span><span class="sxs-lookup"><span data-stu-id="a1e3c-569">`Double Math.Round(Double` `value` `, Int32`  `digits` `, MidpointRounding`  `mode` `)`</span></span>  
 <span data-ttu-id="a1e3c-570">Redondea un valor de punto flotante de precisión doble en un número especificado de dígitos fraccionarios y utiliza la convención de redondeo especificada para los valores de punto medio ([ejemplo](#Round8_Example)).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-570">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values ([example](#Round8_Example)).</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="a1e3c-571">Parámetros</span><span class="sxs-lookup"><span data-stu-id="a1e3c-571">Parameters</span></span>  
 <span data-ttu-id="a1e3c-572">Se trata de una lista completa de parámetros para el <xref:System.Math.Round%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-572">This is a complete list of parameters for the <xref:System.Math.Round%2A> method.</span></span> <span data-ttu-id="a1e3c-573">Para los parámetros utilizados por cada sobrecarga, vea la sintaxis de sobrecarga anterior.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-573">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="a1e3c-574">Parámetro</span><span class="sxs-lookup"><span data-stu-id="a1e3c-574">Parameter</span></span>|<span data-ttu-id="a1e3c-575">Tipo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-575">Type</span></span>|<span data-ttu-id="a1e3c-576">Descripción</span><span class="sxs-lookup"><span data-stu-id="a1e3c-576">Description</span></span>|  
|---------------|----------|-----------------|  
|`d`|<xref:System.Decimal>|<span data-ttu-id="a1e3c-577">Un número que se va a redondear.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-577">A number to be rounded.</span></span>|  
|`a`<br /><br /> <span data-ttu-id="a1e3c-578">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-578">-or-</span></span><br /><br /> `value`|<xref:System.Double>|<span data-ttu-id="a1e3c-579">Número de punto flotante de precisión doble que se va a redondear.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-579">A double-precision floating-point number to be rounded.</span></span>|  
|`decimals`<br /><br /> <span data-ttu-id="a1e3c-580">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-580">-or-</span></span><br /><br /> `digits`|<xref:System.Int32>|<span data-ttu-id="a1e3c-581">Número de dígitos fraccionarios del valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-581">The number of fractional digits in the return value.</span></span> <span data-ttu-id="a1e3c-582">Para <xref:System.Decimal> valores, puede oscilar entre 0 y 28.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-582">For <xref:System.Decimal> values, it can range from 0 to 28.</span></span> <span data-ttu-id="a1e3c-583">Para <xref:System.Double> valores, puede oscilar entre 0 y 15.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-583">For <xref:System.Double> values, it can range from 0 to 15.</span></span> <span data-ttu-id="a1e3c-584">Tenga en cuenta que 15 es el número máximo de dígitos enteros y fraccionarios admitidos por el <xref:System.Double> tipo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-584">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span><br /><br /> <span data-ttu-id="a1e3c-585">Valor predeterminado: 0, lo que se redondea a un entero</span><span class="sxs-lookup"><span data-stu-id="a1e3c-585">Default value: 0, which rounds to an integer</span></span>|  
|`mode`|<xref:System.MidpointRounding>|<span data-ttu-id="a1e3c-586">Una marca que especifica la convención que se usará para los valores de punto medio de redondeo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-586">A flag that specifies the convention to use for rounding midpoint values.</span></span> <span data-ttu-id="a1e3c-587">Consulte [los valores de punto medio y convenciones de redondeo](#Midpoint).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-587">See [Midpoint values and rounding conventions](#Midpoint).</span></span><br /><br /> <span data-ttu-id="a1e3c-588">Valor predeterminado: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a1e3c-588">Default value: <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType></span></span>|  
  
<a name="Returns"></a>   
## <a name="return-value"></a><span data-ttu-id="a1e3c-589">Valor devuelto</span><span class="sxs-lookup"><span data-stu-id="a1e3c-589">Return value</span></span>  
 <span data-ttu-id="a1e3c-590">Tipo: <xref:System.Decimal> o <xref:System.Double>, según el tipo del valor que se va a redondear.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-590">Type: <xref:System.Decimal> or <xref:System.Double>, depending on the type of the value to be rounded.</span></span>   
<span data-ttu-id="a1e3c-591">Un valor numérico del mismo tipo como `d`, `a`, o `value`, pero redondeado al entero o al número especificado de dígitos decimales.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-591">A numeric value of the same type as `d`, `a`, or `value`, but rounded either to an integer or to the specified number of decimal digits.</span></span> <span data-ttu-id="a1e3c-592">Consulte [los valores de punto medio y convenciones de redondeo](#Midpoint) para obtener información sobre el redondeo de números con valores de punto medio.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-592">See [Midpoint values and rounding conventions](#Midpoint) for information about rounding numbers with midpoint values.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="a1e3c-593">Cuando se redondea los valores de punto medio, el algoritmo de redondeo realiza una prueba de igualdad.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-593">When rounding midpoint values, the rounding algorithm performs an equality test.</span></span> <span data-ttu-id="a1e3c-594">Debido a problemas de representación binaria y la precisión en el formato de punto flotante, el valor devuelto por el método puede ser inesperado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-594">Because of problems of binary representation and precision in the floating-point format, the value returned by the method can be unexpected.</span></span> <span data-ttu-id="a1e3c-595">Para obtener más información, consulte [redondeo y la precisión](#Precision).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-595">For more information, see [Rounding and precision](#Precision).</span></span>  
  
 <span data-ttu-id="a1e3c-596">Si una sobrecarga con un <xref:System.Double> parámetro se denomina con <xref:System.Double.NaN?displayProperty=nameWithType>, el método devuelve <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-596">If an overload with a <xref:System.Double> parameter is called with <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1e3c-597">Si se llama con <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> o <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, el método devuelve <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> o <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-597">If it is called with <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="a1e3c-598">Excepciones</span><span class="sxs-lookup"><span data-stu-id="a1e3c-598">Exceptions</span></span>  
  
|<span data-ttu-id="a1e3c-599">Excepción</span><span class="sxs-lookup"><span data-stu-id="a1e3c-599">Exception</span></span>|<span data-ttu-id="a1e3c-600">Condición</span><span class="sxs-lookup"><span data-stu-id="a1e3c-600">Condition</span></span>|<span data-ttu-id="a1e3c-601">Iniciada por</span><span class="sxs-lookup"><span data-stu-id="a1e3c-601">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.OverflowException>|<span data-ttu-id="a1e3c-602">El resultado está fuera del intervalo de la <xref:System.Decimal> tipo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-602">The result is outside the range of the <xref:System.Decimal> type.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="a1e3c-603">`decimals` es menor que 0 o mayor que 28.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-603">`decimals` is less than 0 or greater than 28.</span></span><br /><br /> <span data-ttu-id="a1e3c-604">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-604">-or-</span></span><br /><br /> <span data-ttu-id="a1e3c-605">`digits` es menor que 0 o mayor que 15.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-605">`digits` is less than 0 or greater than 15.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<xref:System.ArgumentException>|<span data-ttu-id="a1e3c-606">`mode` no es un valor válido de <xref:System.MidpointRounding>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-606">`mode` is not a valid value of <xref:System.MidpointRounding>.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="a1e3c-607">¿Qué método se debe llamar?</span><span class="sxs-lookup"><span data-stu-id="a1e3c-607">Which method do I call?</span></span>  
  
|<span data-ttu-id="a1e3c-608">En</span><span class="sxs-lookup"><span data-stu-id="a1e3c-608">To</span></span>|<span data-ttu-id="a1e3c-609">Call</span><span class="sxs-lookup"><span data-stu-id="a1e3c-609">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="a1e3c-610">Redondear un número en un entero utilizando el redondeo al más cercano convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-610">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="a1e3c-611">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-611">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="a1e3c-612">Un número en un entero mediante el uso de un determinado de ida y vuelta de redondeo convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-612">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="a1e3c-613">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-613">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="a1e3c-614">Redondear un número a un número especificado de dígitos fraccionarios utilizando el redondeo al más cercano convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-614">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="a1e3c-615">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-615">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="a1e3c-616">Redondear un número a un número especificado de dígitos fraccionarios utilizando un redondeo convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-616">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="a1e3c-617">O bien</span><span class="sxs-lookup"><span data-stu-id="a1e3c-617">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="a1e3c-618">Redondear un <xref:System.Single> valor a un número especificado de dígitos fraccionarios mediante una convención de redondeo especificado y minimizar la pérdida de precisión.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-618">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="a1e3c-619">Convertir el <xref:System.Single> a un <xref:System.Decimal> y llamar a <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-619">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="a1e3c-620">Redondear un número a un número especificado de dígitos fraccionarios mientras se minimizan los problemas de precisión en los valores de punto medio de redondeo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-620">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="a1e3c-621">Llamar a un método de redondeo que implementa una comparación "mayor o aproximadamente igual a".</span><span class="sxs-lookup"><span data-stu-id="a1e3c-621">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="a1e3c-622">Consulte [redondeo y la precisión](#Precision).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-622">See [Rounding and precision](#Precision).</span></span>|  
|<span data-ttu-id="a1e3c-623">Redondear un valor fraccionario en un entero que es mayor que el valor de fracciones.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-623">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="a1e3c-624">Por ejemplo, redondear 3.1 a 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-624">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="a1e3c-625">Redondear un valor fraccionario en un entero que es menor que el valor de fracciones.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-625">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="a1e3c-626">Por ejemplo, redondear 3.9 a 3.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-626">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  
  
<a name="Midpoint"></a>   
## <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="a1e3c-627">Los valores de punto medio y convenciones de redondeo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-627">Midpoint values and rounding conventions</span></span>  
 <span data-ttu-id="a1e3c-628">Redondeo implica convertir un valor numérico con una precisión especificada con precisión inferior al valor más cercano.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-628">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="a1e3c-629">Por ejemplo, puede usar el <xref:System.Math.Round%28System.Double%29> método para redondear un valor de 3.4 a 3.0 y el <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> método para redondear un valor de 3,579 a 3,58.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-629">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
 <span data-ttu-id="a1e3c-630">En un valor de punto medio, el valor después de los dígitos menos significativos en el resultado es precisamente mitad de camino entre dos números.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-630">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="a1e3c-631">Por ejemplo, 3.47500 es un valor de punto medio si se van a ser redondea a dos posiciones decimales y 7.500 es un valor de punto medio si se van a se redondea a un entero.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-631">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="a1e3c-632">En estos casos, el valor más cercano no puede identificarse fácilmente sin una convención de redondeo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-632">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
 <span data-ttu-id="a1e3c-633">El <xref:System.Math.Round%2A> método es compatible con dos convenciones de redondeo para controlar los valores de punto medio:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-633">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
 <span data-ttu-id="a1e3c-634">**Redondeo para evitar el cero**</span><span class="sxs-lookup"><span data-stu-id="a1e3c-634">**Rounding away from zero**</span></span>  
 <span data-ttu-id="a1e3c-635">Los valores de punto medio se redondean al siguiente número de dirección contraria a cero.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-635">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="a1e3c-636">Por ejemplo, se redondea 3,75 a 3.8, 3.85 redondea a 3.9,-3.75 se redondea a-3.8, y-3.85 se redondea a-3.9.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-636">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="a1e3c-637">Esta forma de redondeo se representa mediante el <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> miembro de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-637">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="a1e3c-638">Redondeo para evitar el cero es la forma más ampliamente conocida de redondeo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-638">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
 <span data-ttu-id="a1e3c-639">**Redondeo al más próximo o redondeo bancario**</span><span class="sxs-lookup"><span data-stu-id="a1e3c-639">**Rounding to nearest, or banker's rounding**</span></span>  
 <span data-ttu-id="a1e3c-640">Los valores de punto medio se redondean al número par más cercano.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-640">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="a1e3c-641">Por ejemplo, 3,75 y 3.85 redondear 3.8 y redondean-3.8-3.75 y-3.85.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-641">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="a1e3c-642">Esta forma de redondeo se representa mediante el <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> miembro de enumeración.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-642">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
 <span data-ttu-id="a1e3c-643">Redondeo al más próximo es la forma estándar de redondeo utilizado en las operaciones financieras y estadísticas.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-643">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="a1e3c-644">Se ajusta al estándar IEEE 754, sección 4.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-644">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="a1e3c-645">Cuando se usa en varias operaciones de redondeo, reduce el error de redondeo que se produce sistemáticamente redondeando los valores de punto medio en un solo sentido.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-645">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="a1e3c-646">En algunos casos, este error de redondeo puede ser significativo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-646">In some cases, this rounding error can be significant.</span></span>  
  
 <span data-ttu-id="a1e3c-647">El ejemplo siguiente ilustra la diferencia que puede obtenerse al redondeo constantemente los valores de punto medio en un solo sentido.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-647">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="a1e3c-648">El ejemplo calcula la media real de una matriz de <xref:System.Decimal> valores y, a continuación, calcula la media cuando se redondean los valores de la matriz mediante las convenciones de dos.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-648">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="a1e3c-649">En este ejemplo, la verdadera Media y la media de la que se produce cuando el redondeo al más próximo son los mismos.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-649">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="a1e3c-650">Sin embargo, la media de la que se produce cuando el redondeo para evitar el cero difiere.05 (o 3,6%) de la media es true.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-650">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
 [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
 <span data-ttu-id="a1e3c-651">De forma predeterminada, el <xref:System.Math.Round%2A> método utiliza el redondeo al más cercano convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-651">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="a1e3c-652">En la tabla siguiente se enumera las sobrecargas de los <xref:System.Math.Round%2A> método y la convención de redondeo que se usa cada uno.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-652">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="a1e3c-653">Sobrecarga</span><span class="sxs-lookup"><span data-stu-id="a1e3c-653">Overload</span></span>|<span data-ttu-id="a1e3c-654">Convención de redondeo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-654">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="a1e3c-655">Determinado por `mode` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-655">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="a1e3c-656">Determinado por `mode` parámetro</span><span class="sxs-lookup"><span data-stu-id="a1e3c-656">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="a1e3c-657">Determinado por `mode` parámetro</span><span class="sxs-lookup"><span data-stu-id="a1e3c-657">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="a1e3c-658">Determinado por `mode` parámetro</span><span class="sxs-lookup"><span data-stu-id="a1e3c-658">Determined by `mode` parameter</span></span>|  
  
<a name="Precision"></a>   
## <a name="rounding-and-precision"></a><span data-ttu-id="a1e3c-659">Redondeo y la precisión</span><span class="sxs-lookup"><span data-stu-id="a1e3c-659">Rounding and precision</span></span>  
 <span data-ttu-id="a1e3c-660">Con el fin de determinar si una operación de redondeo implica un valor de punto medio, el <xref:System.Math.Round%2A> método multiplica el valor original se redondea por 10<sup>n</sup>, donde *n* es el número deseado de fraccionarios dígitos del valor devuelto y, a continuación, determina si la parte fraccionaria restante del valor es mayor o igual que.5.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-660">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="a1e3c-661">Se trata de una ligera variación en una prueba de igualdad y, como hemos explicado en la sección "Prueba de igualdad" de la <xref:System.Double> tema de referencia, comprueba la igualdad con valores de punto flotante es problemática debido a problemas de formato de punto flotante con binario representación y la precisión.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-661">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="a1e3c-662">Esto significa que cualquier parte fraccionaria de un número que es ligeramente menor que.5 (debido a una pérdida de precisión) no se redondeará hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-662">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  
  
 <span data-ttu-id="a1e3c-663">En el siguiente ejemplo se ilustra el problema.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-663">The following example illustrates the problem.</span></span> <span data-ttu-id="a1e3c-664">Repetidamente agrega.1 a 11.0 y redondea el resultado al entero más próximo.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-664">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="a1e3c-665">Independientemente de la convención de redondeo, 11.5 deben redondear al 12.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-665">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="a1e3c-666">Sin embargo, como la salida se muestra en el ejemplo, no la tiene.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-666">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="a1e3c-667">El ejemplo utiliza la "R" [cadena de formato numérico estándar](~/docs/standard/base-types/standard-numeric-format-strings.md) para mostrar el punto flotante del valor precisión completa y muestra que el valor se redondee ha perdido precisión durante repetidas adiciones, y su valor es realmente 11.499999999999998.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-667">The example uses the "R" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="a1e3c-668">Dado que.499999999999998 es menor que.5, el valor no se redondea al entero superior siguiente.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-668">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="a1e3c-669">Como se muestra también en el ejemplo, este problema no ocurre si simplemente asignamos el valor constante 11.5 a un <xref:System.Double> variable.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-669">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs#7)]
 [!code-vb[System.Math.Round.Overload#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb#7)]  
  
 <span data-ttu-id="a1e3c-670">Problemas de precisión en los valores de punto medio de redondeo están más probables que surgen en las siguientes condiciones:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-670">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
-   <span data-ttu-id="a1e3c-671">Cuando un valor fraccionario se no se puede expresar con precisión en formato binario del tipo de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-671">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
-   <span data-ttu-id="a1e3c-672">Cuando se calcula el valor se redondea desde uno o más operaciones de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-672">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
-   <span data-ttu-id="a1e3c-673">Cuando el valor se redondea es un <xref:System.Single> en lugar de un <xref:System.Double> o <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-673">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="a1e3c-674">Para obtener más información, consulte la sección siguiente, [redondear y valores de punto flotante de precisión sencilla](#Single).</span><span class="sxs-lookup"><span data-stu-id="a1e3c-674">For more information, see the next section, [Rounding and single-precision floating-point values](#Single).</span></span>  
  
 <span data-ttu-id="a1e3c-675">En casos donde la falta de precisión en las operaciones de redondeo es problemática, puede hacer lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="a1e3c-675">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
-   <span data-ttu-id="a1e3c-676">Si la operación de redondeo llama a una sobrecarga que se redondea un <xref:System.Double> valor, puede cambiar el <xref:System.Double> a un <xref:System.Decimal> de valor y llamar a una sobrecarga que redondea un <xref:System.Decimal> valor en su lugar.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-676">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="a1e3c-677">Aunque el <xref:System.Decimal> también tiene el tipo de datos de problemas de representación y la pérdida de precisión, estos problemas son mucho menos comunes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-677">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
-   <span data-ttu-id="a1e3c-678">Definir un algoritmo personalizado de redondeo que se realiza una prueba para determinar si el valor se redondea es aceptablemente cerca de un valor de punto medio "casi igual".</span><span class="sxs-lookup"><span data-stu-id="a1e3c-678">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="a1e3c-679">En el ejemplo siguiente se define un `RoundApproximate` método que busca para determinar si un valor fraccionario es lo suficientemente cerca de un valor de punto medio para estar sujeto a redondeo de punto medio.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-679">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="a1e3c-680">Como se muestra el resultado del ejemplo, corrige el problema de redondeo que se muestra en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-680">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
     [!code-csharp[System.Math.Round.Overload#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs#8)]
     [!code-vb[System.Math.Round.Overload#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb#8)]  
  
<a name="Single"></a>   
## <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="a1e3c-681">Valores de punto flotante de precisión sencilla y redondeo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-681">Rounding and single-precision floating-point values</span></span>  
 <span data-ttu-id="a1e3c-682">El <xref:System.Math.Round%2A> método incluye sobrecargas que aceptan argumentos de tipo <xref:System.Decimal> y <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-682">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="a1e3c-683">No existen métodos que los valores de tipo de ida y vuelta <xref:System.Single>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-683">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="a1e3c-684">Si se pasa un <xref:System.Single> valor a una de las sobrecargas de la <xref:System.Math.Round%2A> método, se convierta (en C#) o convertir (en Visual Basic) a un <xref:System.Double>y la correspondiente <xref:System.Math.Round%2A> sobrecarga con un <xref:System.Double> parámetro se denomina.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-684">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="a1e3c-685">Aunque se trata de una conversión de ampliación, a menudo implica una pérdida de precisión, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-685">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="a1e3c-686">Cuando un <xref:System.Single> 16.325 valor se pasa a la <xref:System.Math.Round%2A> método y se redondean a dos posiciones decimales mediante el redondeo al más cercano convención, el resultado es el resultado de 16.33 y no esperado de 16.32.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-686">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs#1)]
 [!code-vb[System.Math.Round.Overload#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb#1)]  
  
 <span data-ttu-id="a1e3c-687">Este resultado inesperado es debido a una pérdida de precisión en la conversión de la <xref:System.Single> valor a un <xref:System.Double>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-687">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="a1e3c-688">Dado que resultante <xref:System.Double> valor de 16.325000762939453 no es un valor de punto medio y es mayor que 16.325, siempre se redondea hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-688">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
 <span data-ttu-id="a1e3c-689">En muchos casos, como se muestra en el ejemplo siguiente, la pérdida de precisión puede minimizarse o eliminar mediante la conversión del <xref:System.Single> valor a un <xref:System.Decimal>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-689">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="a1e3c-690">Tenga en cuenta que, como se trata de una conversión de restricción, requiere utilizando un operador de conversión o llamar a un método de conversión.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-690">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  
  
<a name="Round1_Example"></a>   
## <a name="mathrounddecimal-example"></a><span data-ttu-id="a1e3c-691">Ejemplo de Math.Round(Decimal)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-691">Math.Round(Decimal) example</span></span>  
 <span data-ttu-id="a1e3c-692">En el ejemplo siguiente se muestra el <xref:System.Math.Round%28System.Decimal%29> método.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-692">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="a1e3c-693">Tenga en cuenta que el <xref:System.Decimal> valor 4,5 se redondea a 4 en lugar de 5, porque esta sobrecarga utiliza el valor predeterminado <xref:System.MidpointRounding.ToEven> convención.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-693">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
 [!code-csharp[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
 [!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  
  
<a name="Round2_Example"></a>   
## <a name="mathrounddouble-example"></a><span data-ttu-id="a1e3c-694">Ejemplo de Math.Round(Double)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-694">Math.Round(Double) example</span></span>  
 <span data-ttu-id="a1e3c-695">El ejemplo siguiente muestra el redondeo al valor entero más cercano.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-695">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
 [!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  
  
<a name="Round3_Example"></a>   
## <a name="mathrounddecimal-int32-example"></a><span data-ttu-id="a1e3c-696">Ejemplo de Math.Round (Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-696">Math.Round(Decimal, Int32) example</span></span>  
 <span data-ttu-id="a1e3c-697">El ejemplo siguiente redondea los valores decimales con dos dígitos fraccionarios que los valores que tienen un único dígito fraccionario.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-697">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
 [!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
<a name="Round4_Example"></a>   
## <a name="mathrounddouble-int32-example"></a><span data-ttu-id="a1e3c-698">Math.Round (doble, Int32) ejemplo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-698">Math.Round(Double, Int32) example</span></span>  
 <span data-ttu-id="a1e3c-699">En el ejemplo siguiente se redondea los valores double con dos dígitos fraccionarios en dobles que tienen un único dígito fraccionario.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-699">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
 [!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
 [!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
<a name="Round5_Example"></a>   
## <a name="mathrounddecimal-midpointrounding-example"></a><span data-ttu-id="a1e3c-700">Ejemplo de Math.Round (Decimal, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-700">Math.Round(Decimal, MidpointRounding) example</span></span>  
 <span data-ttu-id="a1e3c-701">El ejemplo siguiente muestra los valores devueltos por la <xref:System.Math.Round%28System.Decimal%29> método, el <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> método con un `mode` argumento de <xref:System.MidpointRounding.ToEven>y el <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> método con un `mode` argumento de <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-701">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]
 [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]  
  
<a name="Round6_Example"></a>   
## <a name="mathrounddouble-midpointrounding-example"></a><span data-ttu-id="a1e3c-702">Math.Round (doble, MidpointRounding) ejemplo</span><span class="sxs-lookup"><span data-stu-id="a1e3c-702">Math.Round(Double, MidpointRounding) example</span></span>  
 <span data-ttu-id="a1e3c-703">El ejemplo siguiente muestra los valores devueltos por la <xref:System.Math.Round%28System.Double%29> método, el <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> método con un `mode` argumento de <xref:System.MidpointRounding.ToEven>y el <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> método con un `mode` argumento de <xref:System.MidpointRounding.AwayFromZero>.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-703">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs#6)]
 [!code-vb[System.Math.Round.Overload#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb#6)]  
  
<a name="Round7_Example"></a>   
## <a name="mathrounddecimal-int32-midpointrounding-example"></a><span data-ttu-id="a1e3c-704">Ejemplo de Math.Round (Decimal, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-704">Math.Round(Decimal, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="a1e3c-705">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Round%2A> método con el <xref:System.MidpointRounding> enumeración.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-705">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
<a name="Round8_Example"></a>   
## <a name="mathrounddouble-int32-midpointrounding-example"></a><span data-ttu-id="a1e3c-706">Ejemplo de Math.Round (doble, Int32, MidpointRounding)</span><span class="sxs-lookup"><span data-stu-id="a1e3c-706">Math.Round(Double, Int32, MidpointRounding) example</span></span>  
 <span data-ttu-id="a1e3c-707">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> método con el <xref:System.MidpointRounding> enumeración.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-707">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
 [!code-csharp[System.Math.Round.Overload#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs#4)]
 [!code-vb[System.Math.Round.Overload#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb#4)]  
  
<a name="Round_Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="a1e3c-708">Información de versión</span><span class="sxs-lookup"><span data-stu-id="a1e3c-708">Version information</span></span>  
 <span data-ttu-id="a1e3c-709">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="a1e3c-709">.NET Framework</span></span>  
 <span data-ttu-id="a1e3c-710">Las sobrecargas sin un <xref:System.MidpointRounding> parámetro se admite en: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-710">Overloads without a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
<span data-ttu-id="a1e3c-711">Sobrecarga con un <xref:System.MidpointRounding> parámetro se admite en: 4.5, 4, 3.5, 3.0 y 2.0</span><span class="sxs-lookup"><span data-stu-id="a1e3c-711">Overloads with a <xref:System.MidpointRounding> parameter are supported in: 4.5, 4, 3.5, 3.0, 2.0</span></span>  
  
 <span data-ttu-id="a1e3c-712">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="a1e3c-712">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="a1e3c-713">Se admiten todas las sobrecargas en: 4, 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="a1e3c-713">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="a1e3c-714">Biblioteca de clases portable</span><span class="sxs-lookup"><span data-stu-id="a1e3c-714">Portable Class Library</span></span>  
 <span data-ttu-id="a1e3c-715">Se admiten todas las sobrecargas</span><span class="sxs-lookup"><span data-stu-id="a1e3c-715">All overloads are supported</span></span>  
  
 <span data-ttu-id="a1e3c-716">.NET para aplicaciones de la Tienda Windows</span><span class="sxs-lookup"><span data-stu-id="a1e3c-716">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="a1e3c-717">Se admiten todas las sobrecargas en: Windows 8</span><span class="sxs-lookup"><span data-stu-id="a1e3c-717">All overloads are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-718">Número decimal que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-718">A decimal number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-719">Redondea un valor decimal al valor integral más próximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-719">Rounds a decimal value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-720">Parámetro <paramref name="d" /> del entero más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-720">The integer nearest parameter <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-721">Si el componente fraccionario de <paramref name="d" /> se encuentra en medio del intervalo entre dos números, uno par y el otro impar, se devuelve el número impar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-721">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span>
          </span>
          <span data-ttu-id="a1e3c-722">Tenga en cuenta que este método devuelve un valor <see cref="T:System.Decimal" /> en lugar de un tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-722">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-723">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-723">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-724">El resultado está fuera del intervalo de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-724">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-725">Número de punto flotante de precisión doble que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-725">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-726">Redondea un valor de punto flotante de precisión doble al valor integral más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-726">Rounds a double-precision floating-point value to the nearest integral value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-727">
            <paramref name="a" /> entero más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-727">The integer nearest <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="a1e3c-728">Si el componente fraccionario de <paramref name="a" /> se encuentra en medio del intervalo entre dos números, uno par y el otro impar, se devuelve el número impar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-728">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span>
          </span>
          <span data-ttu-id="a1e3c-729">Tenga en cuenta que este método devuelve un valor <see cref="T:System.Double" /> en lugar de un tipo entero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-729">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-730">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-730">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="a1e3c-731">Debido a la pérdida de precisión que puede obtenerse al que representa los valores decimales como números de punto flotante o efectuar operaciones aritméticas en valores de punto flotante, en algunos casos el <see cref="M:System.Math.Round(System.Double)" /> no puede aparecer el método redondear los valores de punto medio en el entero par más próximo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-731">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="a1e3c-732">En el ejemplo siguiente, ya que el valor de punto flotante.1 ninguna representación binaria finita, la primera llamada a la <see cref="M:System.Math.Round(System.Double)" /> método con un valor de 11.5 devuelve 11 en lugar de 12.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-732">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="a1e3c-733">[! código csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [! código vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-733">[!code-csharp[System.Math.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs#1)] [!code-vb[System.Math.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-734">Número decimal que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-734">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="a1e3c-735">Número de posiciones decimales del valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-735">The number of decimal places in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-736">Redondea un valor decimal al número especificado de dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-736">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-737">Número más cercano a <paramref name="d" /> que contiene varios dígitos fraccionarios iguales a <paramref name="decimals" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-737">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-738">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-738">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a1e3c-739">
            <paramref name="decimals" /> es menor que 0 o mayor que 28.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-739">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-740">El resultado está fuera del intervalo de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-740">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-741">Número decimal que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-741">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a1e3c-742">Especificación sobre el redondeo de <c>d</c> si se encuentra a la mitad del intervalo comprendido entre otros dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-742">Specification for how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-743">Redondea un valor decimal al entero más próximo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-743">Rounds a decimal value to the nearest integer.</span>
          </span>
          <span data-ttu-id="a1e3c-744">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-744">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-745">
            <paramref name="d" /> entero más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-745">The integer nearest <paramref name="d" />.</span>
          </span>
          <span data-ttu-id="a1e3c-746">Si <paramref name="d" /> se encuentra a la mitad del intervalo entre dos números, uno par y el otro impar, <paramref name="mode" /> determina los dos números que se devuelven.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-746">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-747">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-747">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1e3c-748">
            <paramref name="mode" /> no es un valor válido de <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-748">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-749">El resultado está fuera del intervalo de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-749">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-750">Número de punto flotante de precisión doble que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-750">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="a1e3c-751">Número de dígitos fraccionarios del valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-751">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-752">Redondea un valor de punto flotante de precisión doble al número especificado de dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-752">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-753">Número más cercano a <paramref name="value" /> que contiene varios dígitos fraccionarios iguales a <paramref name="digits" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-753">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-754">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-754">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a1e3c-755">
            <paramref name="digits" /> es menor que 0 o mayor que 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-755">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="a1e3c-756">Debido a la pérdida de precisión que puede obtenerse al que representa los valores decimales como números de punto flotante o efectuar operaciones aritméticas en valores de punto flotante, en algunos casos el <see cref="M:System.Math.Round(System.Double,System.Int32)" /> no puede aparecer el método redondear los valores de punto medio en el más próximo al valor incluso en la <paramref name="digits" /> posición decimal.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-756">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span>
            </span>
            <span data-ttu-id="a1e3c-757">Esto se muestra en el ejemplo siguiente, donde se redondea 2.135 2.13 en lugar de 2.14.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-757">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="a1e3c-758">Esto ocurre porque internamente el método multiplica <paramref name="value" /> por 10<sup>dígitos</sup>, y la operación de multiplicación en este caso sufre una pérdida de precisión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-758">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="a1e3c-759">[! código csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [! código vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-759">[!code-csharp[System.Math.Round#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs#2)] [!code-vb[System.Math.Round#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb#2)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-760">Número de punto flotante de precisión doble que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-760">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a1e3c-761">Especificación sobre el redondeo de <c>value</c> si se encuentra a la mitad del intervalo comprendido entre otros dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-761">Specification for how to round <c>value</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-762">Redondea un valor de punto flotante de precisión doble al entero más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-762">Rounds a double-precision floating-point value to the nearest integer.</span>
          </span>
          <span data-ttu-id="a1e3c-763">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-763">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-764">
            <paramref name="value" /> entero más cercano.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-764">The integer nearest <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="a1e3c-765">Si <paramref name="value" /> se encuentra a la mitad del intervalo entre dos enteros, uno par y el otro impar, <paramref name="mode" /> determina los dos números que se devuelven.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-765">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-766">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-766">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1e3c-767">
            <paramref name="mode" /> no es un valor válido de <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-767">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="a1e3c-768">Debido a la pérdida de precisión que puede obtenerse al que representa los valores decimales como números de punto flotante o efectuar operaciones aritméticas en valores de punto flotante, en algunos casos el <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> no puede aparecer el método redondear los valores de punto medio en el entero par más próximo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-768">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span>
            </span>
            <span data-ttu-id="a1e3c-769">En el ejemplo siguiente, ya que el valor de punto flotante.1 ninguna representación binaria finita, la primera llamada a la <see cref="M:System.Math.Round(System.Double)" /> método con un valor de 11.5 devuelve 11 en lugar de 12.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-769">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span>
            </span>
            <span data-ttu-id="a1e3c-770">[! código csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [! código vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-770">[!code-csharp[System.Math.Round#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs#4)] [!code-vb[System.Math.Round#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb#4)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-771">Número decimal que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-771">A decimal number to be rounded.</span>
          </span>
        </param>
        <param name="decimals">
          <span data-ttu-id="a1e3c-772">Número de posiciones decimales del valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-772">The number of decimal places in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a1e3c-773">Especificación sobre el redondeo de <c>d</c> si se encuentra a la mitad del intervalo comprendido entre otros dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-773">Specification for how to round <c>d</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-774">Redondea un valor decimal al número especificado de dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-774">Rounds a decimal value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="a1e3c-775">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-775">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-776">Número más cercano a <paramref name="d" /> que contiene varios dígitos fraccionarios iguales a <paramref name="decimals" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-776">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span>
          </span>
          <span data-ttu-id="a1e3c-777">Si <paramref name="d" /> tiene menos dígitos fraccionarios que <paramref name="decimals" />, <paramref name="d" /> se devuelve sin modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-777">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-778">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-778">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a1e3c-779">
            <paramref name="decimals" /> es menor que 0 o mayor que 28.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-779">
              <paramref name="decimals" /> is less than 0 or greater than 28.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1e3c-780">
            <paramref name="mode" /> no es un valor válido de <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-780">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a1e3c-781">El resultado está fuera del intervalo de <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-781">The result is outside the range of a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
        <Parameter Name="mode" Type="System.MidpointRounding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-782">Número de punto flotante de precisión doble que se va a redondear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-782">A double-precision floating-point number to be rounded.</span>
          </span>
        </param>
        <param name="digits">
          <span data-ttu-id="a1e3c-783">Número de dígitos fraccionarios del valor devuelto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-783">The number of fractional digits in the return value.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="a1e3c-784">Especificación sobre el redondeo de <c>value</c> si se encuentra a la mitad del intervalo comprendido entre otros dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-784">Specification for how to round <c>value</c> if it is midway between two other numbers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-785">Redondea un valor de punto flotante de precisión doble al número especificado de dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-785">Rounds a double-precision floating-point value to a specified number of fractional digits.</span>
          </span>
          <span data-ttu-id="a1e3c-786">Un parámetro especifica el redondeo del valor si está a la mitad del intervalo entre dos números.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-786">A parameter specifies how to round the value if it is midway between two numbers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-787">Número más cercano a <paramref name="value" /> que tiene varios dígitos fraccionarios iguales a <paramref name="digits" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-787">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span>
          </span>
          <span data-ttu-id="a1e3c-788">Si <paramref name="value" /> tiene menos dígitos fraccionarios que <paramref name="digits" />, <paramref name="value" /> se devuelve sin modificar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-788">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1e3c-789">Para obtener ejemplos y la información de uso completa sobre esta y otras sobrecargas de los `Round` método, consulte la <xref:System.Math.Round%2A> página de referencia.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-789">For examples and comprehensive usage information about this and other overloads of the `Round` method, see the <xref:System.Math.Round%2A> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a1e3c-790">
            <paramref name="digits" /> es menor que 0 o mayor que 15.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-790">
              <paramref name="digits" /> is less than 0 or greater than 15.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1e3c-791">
            <paramref name="mode" /> no es un valor válido de <see cref="T:System.MidpointRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-791">
              <paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="a1e3c-792">Debido a la pérdida de precisión que puede obtenerse al que representa los valores decimales como números de punto flotante o efectuar operaciones aritméticas en valores de punto flotante, en algunos casos el <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> no puede aparecer el método redondear los valores de punto medio tal como se especifica por el <paramref name="mode" /> parámetro.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-792">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span>
            </span>
            <span data-ttu-id="a1e3c-793">Esto se muestra en el ejemplo siguiente, donde se redondea 2.135 2.13 en lugar de 2.14.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-793">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span>
            </span>
            <span data-ttu-id="a1e3c-794">Esto ocurre porque internamente el método multiplica <paramref name="value" /> por 10<sup>dígitos</sup>, y la operación de multiplicación en este caso sufre una pérdida de precisión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-794">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span>
            </span>
            <span data-ttu-id="a1e3c-795">[! código csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [! código vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="a1e3c-795">[!code-csharp[System.Math.Round#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs#3)] [!code-vb[System.Math.Round#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb#3)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-796">Devuelve un entero que indica el signo de un número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-796">Returns an integer that indicates the sign of a number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-797">Número decimal con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-797">A signed decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-798">Devuelve un entero que indica el signo de un número decimal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-798">Returns an integer that indicates the sign of a decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-799">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-799">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-800">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-800">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-801">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-801">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-802">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-802">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-803">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-803">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-804">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-804">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-805">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-805">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-806">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-806">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-807">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-807">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-808">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Decimal%29> método para determinar el signo de un <xref:System.Decimal> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-808">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-809">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-809">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-810">Devuelve un entero que indica el signo de un número de punto flotante de doble precisión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-810">Returns an integer that indicates the sign of a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-811">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-811">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-812">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-812">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-813">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-813">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-814">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-814">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-815">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-815">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-816">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-816">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-817">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-817">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-818">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-818">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-819">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-819">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-820">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Double%29> método para determinar el signo de un <xref:System.Double> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-820">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="a1e3c-821">
            <paramref name="value" /> es igual a <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-821">
              <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-822">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-822">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-823">Devuelve un entero que indica el signo de un entero de 16 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-823">Returns an integer that indicates the sign of a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-824">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-824">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-825">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-825">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-826">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-826">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-827">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-827">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-828">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-828">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-829">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-829">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-830">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-830">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-831">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-831">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-832">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-832">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-833">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Int16%29> método para determinar el signo de un <xref:System.Int16> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-833">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-834">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-834">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-835">Devuelve un entero que indica el signo de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-835">Returns an integer that indicates the sign of a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-836">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-836">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-837">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-837">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-838">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-838">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-839">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-839">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-840">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-840">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-841">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-841">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-842">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-842">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-843">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-843">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-844">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-844">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-845">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Int32%29> método para determinar el signo de un <xref:System.Int32> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-845">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-846">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-846">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-847">Devuelve un entero que indica el signo de un entero de 64 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-847">Returns an integer that indicates the sign of a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-848">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-848">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-849">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-849">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-850">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-850">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-851">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-851">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-852">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-852">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-853">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-853">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-854">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-854">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-855">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-855">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-856">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-856">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-857">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Int64%29> método para determinar el signo de un <xref:System.Int64> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-857">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-858">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-858">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-859">Devuelve un entero que indica el signo de un entero de 8 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-859">Returns an integer that indicates the sign of an 8-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-860">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-860">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-861">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-861">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-862">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-862">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-863">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-863">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-864">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-864">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-865">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-865">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-866">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-866">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-867">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-867">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-868">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-868">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-869">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.SByte%29> método para determinar el signo de un <xref:System.SByte> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-869">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-870">Número con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-870">A signed number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-871">Devuelve un entero que indica el signo de un número de punto flotante de precisión sencilla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-871">Returns an integer that indicates the sign of a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-872">Número que indica el signo de <paramref name="value" />, como puede verse en la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-872">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-873">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-873">Return value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-874">Significado</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-874">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-875">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-875">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-876">
                  <paramref name="value" /> es menor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-876">
                    <paramref name="value" /> is less than zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-877">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-877">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-878">
                  <paramref name="value" /> es igual a cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-878">
                    <paramref name="value" /> is equal to zero.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-879">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-879">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-880">
                  <paramref name="value" /> es mayor que cero.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-880">
                    <paramref name="value" /> is greater than zero.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-881">En el ejemplo siguiente se muestra cómo usar el <xref:System.Math.Sign%28System.Single%29> método para determinar el signo de un <xref:System.Single> valor y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-881">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  
  
 [!code-cpp[Math.Sign#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp#1)]
 [!code-csharp[Math.Sign#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs#1)]
 [!code-vb[Math.Sign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException">
          <span data-ttu-id="a1e3c-882">
            <paramref name="value" /> es igual a <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-882">
              <paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-883">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-883">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-884">Devuelve el seno del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-884">Returns the sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-885">Seno de <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-885">The sine of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="a1e3c-886">Si <paramref name="a" /> es igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, este método devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-886">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-887">El ángulo, `a`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-887">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="a1e3c-888">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-888">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="a1e3c-889">Los valores aceptables de `a` intervalo de aproximadamente -9223372036854775295 a aproximadamente 9223372036854775295.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-889">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="a1e3c-890">Para los valores fuera de este intervalo, el <xref:System.Math.Sin%2A> devuelve del método `a` sin modificar en lugar de producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-890">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-891">En el ejemplo siguiente se usa <xref:System.Math.Sin%2A> para evaluar determinadas identidades trigonométricas de ángulos seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-891">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  
  
 [!code-cpp[System.Math.SinCos#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp#1)]
 [!code-csharp[System.Math.SinCos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs#1)]
 [!code-vb[System.Math.SinCos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-892">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-892">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-893">Devuelve el seno hiperbólico del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-893">Returns the hyperbolic sine of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-894">Seno hiperbólico de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-894">The hyperbolic sine of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="a1e3c-895">Si <paramref name="value" /> es igual a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> o <see cref="F:System.Double.NaN" />, este método devuelve <see cref="T:System.Double" /> igual a <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-895">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-896">El ángulo, `value`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-896">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a1e3c-897">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-897">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-898">En el ejemplo siguiente se usa <xref:System.Math.Sinh%2A> para evaluar determinadas identidades hiperbólicas de los valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-898">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.SinhCosh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp#1)]
 [!code-csharp[System.Math.SinhCosh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs#1)]
 [!code-vb[System.Math.SinhCosh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-899">Número cuya raíz cuadrada se va a calcular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-899">The number whose square root is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-900">Devuelve la raíz cuadrada de un número especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-900">Returns the square root of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-901">Uno de los valores de la tabla siguiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-901">One of the values in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="a1e3c-902">Parámetro <paramref name="d" /></span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-902">
                    <paramref name="d" /> parameter</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-903">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-903">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="a1e3c-904">Cero o positivo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-904">Zero or positive</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="a1e3c-905">Raíz cuadrada positiva de <paramref name="d" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-905">The positive square root of <paramref name="d" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-906">Negativo</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-906">Negative</span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-907">Es igual a <see cref="F:System.Double.NaN" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-907">Equals <see cref="F:System.Double.NaN" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="a1e3c-908">Es igual a <see cref="F:System.Double.PositiveInfinity" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-908">Equals <see cref="F:System.Double.PositiveInfinity" /></span>
                </span>
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1e3c-909">La raíz cuadrada del área de un cuadrado representa la longitud de cualquier lado del cuadrado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-909">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="a1e3c-910">El ejemplo siguiente muestra el área de algunas ciudades de Estados Unidos y da como resultado una impresión del tamaño de cada ciudad si representaba un cuadrado.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-910">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="a1e3c-911">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-911">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-912">Devuelve la tangente del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-912">Returns the tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-913">Tangente de <paramref name="a" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-913">The tangent of <paramref name="a" />.</span>
          </span>
          <span data-ttu-id="a1e3c-914">Si <paramref name="a" /> es igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />, este método devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-914">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-915">El ángulo, `a`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-915">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="a1e3c-916">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-916">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-917">El ejemplo siguiente muestra cómo calcular la tangente de un ángulo y mostrarlo en la consola.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-917">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  
  
 [!code-cpp[math.atanx#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp#1)]
 [!code-csharp[math.atanx#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs#1)]
 [!code-vb[math.atanx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a1e3c-918">Ángulo, medido en radianes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-918">An angle, measured in radians.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-919">Devuelve la tangente hiperbólica del ángulo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-919">Returns the hyperbolic tangent of the specified angle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-920">Tangente hiperbólica de <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-920">The hyperbolic tangent of <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="a1e3c-921">Si <paramref name="value" /> es igual a <see cref="F:System.Double.NegativeInfinity" />, este método devuelve -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-921">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span>
          </span>
          <span data-ttu-id="a1e3c-922">Si el valor es igual a <see cref="F:System.Double.PositiveInfinity" />, este método devuelve 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-922">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span>
          </span>
          <span data-ttu-id="a1e3c-923">Si <paramref name="value" /> es igual a <see cref="F:System.Double.NaN" />, este método devuelve <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-923">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-924">El ángulo, `value`, deben estar en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-924">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="a1e3c-925">Multiplicada por <xref:System.Math.PI?displayProperty=nameWithType>/180 para convertir grados en radianes.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-925">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-926">En el ejemplo siguiente se usa <xref:System.Math.Tanh%2A> para evaluar determinadas identidades de tangente hiperbólica de valores seleccionados.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-926">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  
  
 [!code-cpp[System.Math.Tanh#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp#1)]
 [!code-csharp[System.Math.Tanh#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs#1)]
 [!code-vb[System.Math.Tanh#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a1e3c-927">Calcula la parte entera de un número.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-927">Calculates the integral part of a number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-928">El número se redondea al entero más próximo, hacia cero.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-928">The number is rounded to the nearest integer towards zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-929">Número que se va a truncar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-929">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-930">Calcula la parte entera de un número decimal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-930">Calculates the integral part of a specified decimal number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-931">Parte entera de <paramref name="d" />, es decir, el número que queda después de descartar los dígitos fraccionarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-931">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-932"><xref:System.Math.Truncate%2A> redondea `d` al entero más próximo, hacia cero.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-932"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-933">El ejemplo siguiente se llama el <xref:System.Math.Truncate%28System.Decimal%29> método truncar un positivo y negativo <xref:System.Decimal> valor.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-933">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="a1e3c-934">Número que se va a truncar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-934">A number to truncate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a1e3c-935">Calcula la parte entera de un número de punto flotante de precisión doble especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-935">Calculates the integral part of a specified double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a1e3c-936">La parte entera de <paramref name="d" />, es decir, el número que permanece una vez descartado cualquier dígito fraccionario o uno de los valores enumerados en la siguiente tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a1e3c-936">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <paramref name="d" />
              </term>
              <description>
                <span data-ttu-id="a1e3c-937">Valor devuelto</span>
                <span class="sxs-lookup">
                  <span data-stu-id="a1e3c-937">Return value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see cref="F:System.Double.NaN" />
              </term>
              <description>
                <see cref="F:System.Double.NaN" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.NegativeInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.NegativeInfinity" />
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Double.PositiveInfinity" />
              </term>
              <description>
                <see cref="F:System.Double.PositiveInfinity" />
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e3c-938"><xref:System.Math.Truncate%2A> redondea `d` al entero más próximo, hacia cero.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-938"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e3c-939">El ejemplo siguiente se llama el <xref:System.Math.Truncate%28System.Double%29> método truncar un positivo y negativo <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="a1e3c-939">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>